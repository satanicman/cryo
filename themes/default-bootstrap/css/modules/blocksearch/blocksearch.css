/*
SCSS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: $icon-home-width;
}

The large array-like variables contain all information about a single icon
$icon-home: x y offset_x offset_y width height total_width total_height image_path;

At the bottom of this section, we provide information about the spritesheet itself
$spritesheet: width height image $spritesheet-sprites;
*/
/*
The provided mixins are intended to be used with the array-like variables

.icon-home {
  @include sprite-width($icon-home);
}

.icon-email {
  @include sprite($icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
/*
The `sprites` mixin generates identical output to the CSS template
  but can be overridden inside of SCSS

@include sprites($spritesheet-sprites);
*/
@media (max-width: 991px) {
  #search_block_top {
    display: none; } }
#search_block_top .button-search {
  cursor: pointer;
  position: relative;
  z-index: 2;
  background: none;
  border: none;
  padding: 5px;
  height: 36px;
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
  align-items: center;
  -webkit-justify-content: space-around;
  justify-content: space-around;
  margin: 0;
  float: right; }
#search_block_top .button-search span {
  display: none; }
#search_block_top #search_query_top {
  -moz-transition: all 0.3s;
  -o-transition: all 0.3s;
  -webkit-transition: all 0.3s;
  transition: all 0.3s;
  height: 36px;
  background: #fbfbfb;
  display: inline;
  position: absolute;
  right: 0;
  top: 0;
  bottom: 0; }
@media (min-width: 1260px) {
  #search_block_top #search_query_top {
    visibility: hidden;
    width: 0;
    opacity: 0; } }
@media (max-width: 1259px) {
  #search_block_top #search_query_top {
    width: 80%; } }
@media (max-width: 991px) {
  #search_block_top #search_query_top {
    width: 100%;
    padding: 5px 40px 5px 5px; } }
@media (min-width: 1260px) {
  #search_block_top #search_query_top.show {
    visibility: visible;
    width: 200px;
    opacity: 1;
    padding: 5px 40px 5px 5px; } }

.ac_results {
  background: #fff;
  border: 1px solid #d6d4d4;
  width: 271px;
  margin-top: -1px; }
.ac_results li {
  padding: 0 10px;
  font-weight: normal;
  color: #686666;
  font-size: 13px;
  line-height: 22px; }
.ac_results li.ac_odd {
  background: #fff; }
.ac_results li:hover, .ac_results li.ac_over {
  background: #fbfbfb; }

form#searchbox {
  position: relative; }
form#searchbox label {
  color: #000; }
form#searchbox input#search_query_block {
  margin-right: 10px;
  max-width: 222px;
  margin-bottom: 10px;
  display: inline-block;
  float: left; }
form#searchbox .button.button-small {
  float: left; }
form#searchbox .button.button-small i {
  margin-right: 0; }

/*# sourceMappingURL=blocksearch.css.map */
